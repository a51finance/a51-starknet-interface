[
    {
      "type": "impl",
      "name": "CLTBaseImpl",
      "interface_name": "cltbase::CLT_Base::ICLTBase"
    },
    {
      "type": "enum",
      "name": "core::bool",
      "variants": [
        {
          "name": "False",
          "type": "()"
        },
        {
          "name": "True",
          "type": "()"
        }
      ]
    },
    {
      "type": "struct",
      "name": "jediswap_v2_core::libraries::signed_integers::i32::i32",
      "members": [
        {
          "name": "mag",
          "type": "core::integer::u32"
        },
        {
          "name": "sign",
          "type": "core::bool"
        }
      ]
    },
    {
      "type": "struct",
      "name": "cltbase::CLT_Base::StrategyKey",
      "members": [
        {
          "name": "pool",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "tick_lower",
          "type": "jediswap_v2_core::libraries::signed_integers::i32::i32"
        },
        {
          "name": "tick_upper",
          "type": "jediswap_v2_core::libraries::signed_integers::i32::i32"
        }
      ]
    },
    {
      "type": "struct",
      "name": "core::integer::u256",
      "members": [
        {
          "name": "low",
          "type": "core::integer::u128"
        },
        {
          "name": "high",
          "type": "core::integer::u128"
        }
      ]
    },
    {
      "type": "struct",
      "name": "cltbase::CLT_Base::StrategyPayload",
      "members": [
        {
          "name": "action_name",
          "type": "core::felt252"
        },
        {
          "name": "data",
          "type": "core::array::Array::<core::felt252>"
        }
      ]
    },
    {
      "type": "struct",
      "name": "cltbase::CLT_Base::PositionActions",
      "members": [
        {
          "name": "mode",
          "type": "core::integer::u256"
        },
        {
          "name": "exit_strategy",
          "type": "core::array::Array::<cltbase::CLT_Base::StrategyPayload>"
        },
        {
          "name": "rebase_strategy",
          "type": "core::array::Array::<cltbase::CLT_Base::StrategyPayload>"
        },
        {
          "name": "liquidity_distribution",
          "type": "core::array::Array::<cltbase::CLT_Base::StrategyPayload>"
        }
      ]
    },
    {
      "type": "struct",
      "name": "cltbase::CLT_Base::DepositParams",
      "members": [
        {
          "name": "strategy_id",
          "type": "core::felt252"
        },
        {
          "name": "amount0_desired",
          "type": "core::integer::u256"
        },
        {
          "name": "amount1_desired",
          "type": "core::integer::u256"
        },
        {
          "name": "amount0_min",
          "type": "core::integer::u256"
        },
        {
          "name": "amount1_min",
          "type": "core::integer::u256"
        },
        {
          "name": "recipient",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "type": "struct",
      "name": "cltbase::CLT_Base::WithdrawParams",
      "members": [
        {
          "name": "token_id",
          "type": "core::integer::u256"
        },
        {
          "name": "recipient",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "liquidity",
          "type": "core::integer::u256"
        },
        {
          "name": "amount0_min",
          "type": "core::integer::u256"
        },
        {
          "name": "amount1_min",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "type": "struct",
      "name": "jediswap_v2_core::libraries::signed_integers::i256::i256",
      "members": [
        {
          "name": "mag",
          "type": "core::integer::u256"
        },
        {
          "name": "sign",
          "type": "core::bool"
        }
      ]
    },
    {
      "type": "struct",
      "name": "cltbase::CLT_Base::ShiftLiquidityParams",
      "members": [
        {
          "name": "key",
          "type": "cltbase::CLT_Base::StrategyKey"
        },
        {
          "name": "strategy_id",
          "type": "core::felt252"
        },
        {
          "name": "should_mint",
          "type": "core::bool"
        },
        {
          "name": "zero_for_one",
          "type": "core::bool"
        },
        {
          "name": "swap_amount",
          "type": "jediswap_v2_core::libraries::signed_integers::i256::i256"
        },
        {
          "name": "module_status",
          "type": "core::array::Array::<core::felt252>"
        },
        {
          "name": "sqrt_price_limit_x96",
          "type": "core::integer::u256"
        }
      ]
    },
    {
      "type": "interface",
      "name": "cltbase::CLT_Base::ICLTBase",
      "items": [
        {
          "type": "function",
          "name": "create_strategy",
          "inputs": [
            {
              "name": "key",
              "type": "cltbase::CLT_Base::StrategyKey"
            },
            {
              "name": "actions",
              "type": "cltbase::CLT_Base::PositionActions"
            },
            {
              "name": "management_fee",
              "type": "core::integer::u256"
            },
            {
              "name": "performance_fee",
              "type": "core::integer::u256"
            },
            {
              "name": "is_compound",
              "type": "core::bool"
            },
            {
              "name": "is_private",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "deposit",
          "inputs": [
            {
              "name": "params",
              "type": "cltbase::CLT_Base::DepositParams"
            }
          ],
          "outputs": [
            {
              "type": "(core::integer::u256, core::integer::u256, core::integer::u256, core::integer::u256)"
            }
          ],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "withdraw",
          "inputs": [
            {
              "name": "params",
              "type": "cltbase::CLT_Base::WithdrawParams"
            }
          ],
          "outputs": [
            {
              "type": "(core::integer::u256, core::integer::u256)"
            }
          ],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "shift_liquidity",
          "inputs": [
            {
              "name": "params",
              "type": "cltbase::CLT_Base::ShiftLiquidityParams"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "get_Owner",
          "inputs": [],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "impl",
      "name": "ERC721Impl",
      "interface_name": "openzeppelin::token::erc721::interface::IERC721"
    },
    {
      "type": "struct",
      "name": "core::array::Span::<core::felt252>",
      "members": [
        {
          "name": "snapshot",
          "type": "@core::array::Array::<core::felt252>"
        }
      ]
    },
    {
      "type": "interface",
      "name": "openzeppelin::token::erc721::interface::IERC721",
      "items": [
        {
          "type": "function",
          "name": "balance_of",
          "inputs": [
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "owner_of",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "safe_transfer_from",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            },
            {
              "name": "data",
              "type": "core::array::Span::<core::felt252>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "transfer_from",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "approve",
          "inputs": [
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "set_approval_for_all",
          "inputs": [
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "approved",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "get_approved",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "is_approved_for_all",
          "inputs": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "impl",
      "name": "ERC721MetadataImpl",
      "interface_name": "openzeppelin::token::erc721::interface::IERC721Metadata"
    },
    {
      "type": "struct",
      "name": "core::byte_array::ByteArray",
      "members": [
        {
          "name": "data",
          "type": "core::array::Array::<core::bytes_31::bytes31>"
        },
        {
          "name": "pending_word",
          "type": "core::felt252"
        },
        {
          "name": "pending_word_len",
          "type": "core::integer::u32"
        }
      ]
    },
    {
      "type": "interface",
      "name": "openzeppelin::token::erc721::interface::IERC721Metadata",
      "items": [
        {
          "type": "function",
          "name": "name",
          "inputs": [],
          "outputs": [
            {
              "type": "core::byte_array::ByteArray"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "symbol",
          "inputs": [],
          "outputs": [
            {
              "type": "core::byte_array::ByteArray"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "token_uri",
          "inputs": [
            {
              "name": "token_id",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::byte_array::ByteArray"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "impl",
      "name": "ERC721CamelOnly",
      "interface_name": "openzeppelin::token::erc721::interface::IERC721CamelOnly"
    },
    {
      "type": "interface",
      "name": "openzeppelin::token::erc721::interface::IERC721CamelOnly",
      "items": [
        {
          "type": "function",
          "name": "balanceOf",
          "inputs": [
            {
              "name": "account",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::integer::u256"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "ownerOf",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "safeTransferFrom",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            },
            {
              "name": "data",
              "type": "core::array::Span::<core::felt252>"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "transferFrom",
          "inputs": [
            {
              "name": "from",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "to",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "setApprovalForAll",
          "inputs": [
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "approved",
              "type": "core::bool"
            }
          ],
          "outputs": [],
          "state_mutability": "external"
        },
        {
          "type": "function",
          "name": "getApproved",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "state_mutability": "view"
        },
        {
          "type": "function",
          "name": "isApprovedForAll",
          "inputs": [
            {
              "name": "owner",
              "type": "core::starknet::contract_address::ContractAddress"
            },
            {
              "name": "operator",
              "type": "core::starknet::contract_address::ContractAddress"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "impl",
      "name": "ERC721MetadataCamelOnly",
      "interface_name": "openzeppelin::token::erc721::interface::IERC721MetadataCamelOnly"
    },
    {
      "type": "interface",
      "name": "openzeppelin::token::erc721::interface::IERC721MetadataCamelOnly",
      "items": [
        {
          "type": "function",
          "name": "tokenURI",
          "inputs": [
            {
              "name": "tokenId",
              "type": "core::integer::u256"
            }
          ],
          "outputs": [
            {
              "type": "core::byte_array::ByteArray"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "impl",
      "name": "SRC5Impl",
      "interface_name": "openzeppelin::introspection::interface::ISRC5"
    },
    {
      "type": "interface",
      "name": "openzeppelin::introspection::interface::ISRC5",
      "items": [
        {
          "type": "function",
          "name": "supports_interface",
          "inputs": [
            {
              "name": "interface_id",
              "type": "core::felt252"
            }
          ],
          "outputs": [
            {
              "type": "core::bool"
            }
          ],
          "state_mutability": "view"
        }
      ]
    },
    {
      "type": "constructor",
      "name": "constructor",
      "inputs": [
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "governance_fee_handler_address",
          "type": "core::starknet::contract_address::ContractAddress"
        }
      ]
    },
    {
      "type": "event",
      "name": "cltbase::CLT_Base::CLTBase::StrategyCreated",
      "kind": "struct",
      "members": [
        {
          "name": "strategy_id",
          "type": "core::felt252",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "cltbase::CLT_Base::CLTBase::Deposited",
      "kind": "struct",
      "members": [
        {
          "name": "token_id",
          "type": "core::integer::u256",
          "kind": "key"
        },
        {
          "name": "recipient",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "data"
        },
        {
          "name": "share",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "amount0",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "amount1",
          "type": "core::integer::u256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "cltbase::CLT_Base::CLTBase::StrategyFee",
      "kind": "struct",
      "members": [
        {
          "name": "strategy_id",
          "type": "core::felt252",
          "kind": "key"
        },
        {
          "name": "earned0",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "earned1",
          "type": "core::integer::u256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "cltbase::CLT_Base::CLTBase::Withdraw",
      "kind": "struct",
      "members": [
        {
          "name": "token_id",
          "type": "core::integer::u256",
          "kind": "key"
        },
        {
          "name": "recipient",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "liquidity",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "amount0",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "amount1",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "fee0",
          "type": "core::integer::u256",
          "kind": "data"
        },
        {
          "name": "fee1",
          "type": "core::integer::u256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "cltbase::CLT_Base::CLTBase::LiquidityShifted",
      "kind": "struct",
      "members": [
        {
          "name": "strategy_id",
          "type": "core::felt252",
          "kind": "key"
        },
        {
          "name": "should_mint",
          "type": "core::bool",
          "kind": "data"
        },
        {
          "name": "zero_for_one",
          "type": "core::bool",
          "kind": "data"
        },
        {
          "name": "swap_amount",
          "type": "jediswap_v2_core::libraries::signed_integers::i256::i256",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::token::erc721::erc721::ERC721Component::Transfer",
      "kind": "struct",
      "members": [
        {
          "name": "from",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "to",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "token_id",
          "type": "core::integer::u256",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::token::erc721::erc721::ERC721Component::Approval",
      "kind": "struct",
      "members": [
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "approved",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "token_id",
          "type": "core::integer::u256",
          "kind": "key"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::token::erc721::erc721::ERC721Component::ApprovalForAll",
      "kind": "struct",
      "members": [
        {
          "name": "owner",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "operator",
          "type": "core::starknet::contract_address::ContractAddress",
          "kind": "key"
        },
        {
          "name": "approved",
          "type": "core::bool",
          "kind": "data"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::token::erc721::erc721::ERC721Component::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "Transfer",
          "type": "openzeppelin::token::erc721::erc721::ERC721Component::Transfer",
          "kind": "nested"
        },
        {
          "name": "Approval",
          "type": "openzeppelin::token::erc721::erc721::ERC721Component::Approval",
          "kind": "nested"
        },
        {
          "name": "ApprovalForAll",
          "type": "openzeppelin::token::erc721::erc721::ERC721Component::ApprovalForAll",
          "kind": "nested"
        }
      ]
    },
    {
      "type": "event",
      "name": "openzeppelin::introspection::src5::SRC5Component::Event",
      "kind": "enum",
      "variants": []
    },
    {
      "type": "event",
      "name": "cltbase::CLT_Base::CLTBase::Event",
      "kind": "enum",
      "variants": [
        {
          "name": "StrategyCreated",
          "type": "cltbase::CLT_Base::CLTBase::StrategyCreated",
          "kind": "nested"
        },
        {
          "name": "Deposited",
          "type": "cltbase::CLT_Base::CLTBase::Deposited",
          "kind": "nested"
        },
        {
          "name": "StrategyFee",
          "type": "cltbase::CLT_Base::CLTBase::StrategyFee",
          "kind": "nested"
        },
        {
          "name": "Withdraw",
          "type": "cltbase::CLT_Base::CLTBase::Withdraw",
          "kind": "nested"
        },
        {
          "name": "LiquidityShifted",
          "type": "cltbase::CLT_Base::CLTBase::LiquidityShifted",
          "kind": "nested"
        },
        {
          "name": "ERC721Event",
          "type": "openzeppelin::token::erc721::erc721::ERC721Component::Event",
          "kind": "flat"
        },
        {
          "name": "SRC5Event",
          "type": "openzeppelin::introspection::src5::SRC5Component::Event",
          "kind": "flat"
        }
      ]
    }
  ]